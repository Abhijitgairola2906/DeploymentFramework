<?xml version="1.0" encoding="utf-8" ?>
<!-- 
      BizTalkSample.sln.deploy.build is a template build file designed to show how to
      leverage the NAnt-based deployment framework for BizTalk 
      
      The framework addresses BizTalk 2006 deployments, both for developer desktops
      and for production use after an MSI installation.
      
      It relies on BizTalkDeploymentInclude.nant for the actual BizTalk deployment work - 
      only project-specific variations and deployment work must be done in this file.
      
      (By Scott Colestock / www.traceofthought.net)
-->      

<!-- don't put spaces in your project name (or .sln file) -->
<project name="BizTalkSample" default="debugDeploy"> 
   
   <sysinfo failonerror="false" />
   <include buildfile="BizTalkDeploymentInclude.nant"/>

   <!-- Set this to true for BizTalk 2006 support. -->
   <property name="biztalk2006"  value="true" />
   
   <!-- Set following properties to true or false to include various pieces of a BizTalk deployment. -->
   <property name="includeSchemas"  value="true" />
   <property name="includeOrchestrations" value="true" />
   <property name="includeTransforms" value="true" />
   <property name="includePipelines" value="true" />
   <property name="includeComponents" value="true" />
   <property name="includePipelineComponents" value="false" />
   <property name="includeCustomFunctoids" value="false" />
   <property name="includeVocabAndRules" value="false" />
   <property name="includeVirtualDirectories" value="true" />
   <property name="includeMessagingBindings" value="true" />
   <property name="includeDeploymentTest" value="true" />
   <property name="includelog4net" value="true" />
   <property name="includeSSO" value="true" />
   
   
   <!-- Set these true if we have a "master" port bindings file where the transporttypedata elements are stored in 
        unescaped XML for convenience/readability sake. -->
   <property name="applyXmlEscape" value="true" />
   <property name="usingMasterBindings" value="true" />

   <!-- Get our PDBs into the GAC so we get file/line number information in stack traces. -->   
   <property name="deployPDBsToGac" value="true" />
   
   <!-- Set to a value if developer needs local version of environment settings. -->
   <property name="developerPreProcessSettings" value="${project::get-base-directory()}\EnvironmentSettings\local_settings.xml" />
     
   <!-- We are asking the deployment framework to create NAnt properties from the values
        in our environment settings file that are named here. ssoAppUserGroup and ssoAppAdminGroup
        should be supplied if they need to be different for SSO app creation than the defaults
        specified in BizTalkDeploymentInclude.nant -->
   <property name="propsFromEnvSettings" value="ssoAppUserGroup,ssoAppAdminGroup"/>

   <!-- We name our host explicitly to avoid having the framework bounce them all. -->
   <property name="bizTalkHosts" value="BizTalkServerApplication"/>     
   
   <!-- The core scripts allows us to supply customDeployTarget and
        customUndeployTarget. As an example, we are using it to patch our binding file, and set permissions so
        the BizTalk service account (fed in by setenvui.exe) can get to our file-transport ports. 
        Use the customDeployTarget and customUndeployTarget to accomplish any custom work that isn't
        handled by the the core (in BizTalkDeploymentInclude.nant) -->
   <target name="customDeployTarget">
      <call target="applyFilePerms"/>
   </target>
   
   <!-- Note that BizTalkSample.VDirList.txt is populated with "virtual directory, physical directory, app pool name"
        tuples - one per line in the text file.  Physical directory is interpreted relative to the directory where
        the nant script is located - not a full path! -->
        
   <!-- For vdirs using the BizTalk isapi extension, we set these properties: -->
   <property name="wseExtensionPath" value="BizTalkSampleVDir" />
   <property name="wseExtensionName" value="BizTalkSampleVDir" />

   <!-- Properties to assist in deploying BizTalk rule engine vocabularies and rules
        This sample does NOT include rules at this point - these properties just illustrate
        what you would do if you had them.  The DeployBTRules.exe utility is used by
        the include file to support this functionality.  -->
   <property name="ruleVocabulary" value="${project::get-name()}.RuleVocabulary.1.3.xml" />
   <property name="rulePolicy" value="${project::get-name()}.RulePolicy.1.1.xml" />
   <property name="rulePolicyName" value="SomeBusinessRuleMsgPolicy" />
   
   
   <target name="applyFilePerms" if="${serverDeploy}">
   
      <!-- SetEnvUI.exe will have set the biztalk service account into the BTSACCOUNT environment variable. -->
      <xmlpeek file="${portBindings}" property="inputLocation" xpath="/BindingInfo/ReceivePortCollection/ReceivePort/ReceiveLocations/ReceiveLocation[@Name=&quot;BizTalkSample_Sample1_File&quot;]/Address"/>
      <exec program="cacls" failonerror="false" commandline="&quot;${inputLocation}&quot; /E /G ${sys.env.BTSACCOUNT}:F" />
      
      <!-- get our send port location, then strip away the %messageid%.xml portion -->
      <xmlpeek file="${portBindings}" property="outputLocation" xpath="/BindingInfo/SendPortCollection/SendPort[@Name=&quot;BizTalkSample_SampleS2_File&quot;]/PrimaryTransport/Address"/>
      <property name="locationDirectory" value="${directory::get-parent-directory(outputLocation)}"/>
      
      <exec program="cacls" failonerror="false" commandline="&quot;${locationDirectory}&quot; /E /G ${sys.env.BTSACCOUNT}:F" />      
      
   </target>

   
</project>