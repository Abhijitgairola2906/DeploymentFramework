<!-- 
Version: 4.0
This is the core nant file (to be included by a project-specific nant file) that is used to 

1) assemble the desired MSI directory structure 
2) invoke the WiX generation script
3) invoke WiX itself.

Project specific WiX files should implement a target called customRedist to perform 
any project specific work necessary to assemble a directory tree that corresponds to what
the MSI should contain.

-->

<project name="BizTalk.WiXSetup.nant">

   <property name="redist.dir" value="${project::get-name()}.WiXSetup\Setup\redist" />
   
   <!--
    Assemble an image of the redistributable directory structure
    by pulling files from various locations.
   -->
   <target name="redist">
   
      <!-- Cleanup redist dir -->
      <delete dir="${redist.dir}" failonerror="false" />
      <mkdir dir="${redist.dir}" />
      
      <!-- Make sure we have directories we need -->
      <mkdir dir="${redist.dir}\${deployResults}" />
      <if test="${includeVirtualDirectories}">
         <foreach item="Line" in="${project::get-base-directory()}\${vdirListFile}" delim="," property="vdir,physdir,appPool">
            <mkdir dir="${redist.dir}\${physdir}"/>
            <copy todir="${redist.dir}\${physdir}">
               <fileset basedir="${physdir}">
                  <include name="**\*.*" />
               </fileset>
            </copy>
         </foreach>
      </if>
      
      <!-- Grab miscellaneous files -->
      <copy todir="${redist.dir}" file="InstallWizard.xml"/>
      <copy todir="${redist.dir}" file="UninstallWizard.xml"/>
      <copy todir="${redist.dir}">         
         <fileset>
            <include name="*.chm" />
         </fileset>
      </copy>

      <foreach item="String" in="${portBindings}" delim="," property="portBinding" if="${not usingMasterBindings}">
         <copy todir="${redist.dir}" file="${portBinding}"/>
      </foreach>
      
     <foreach item="String" in="${portBindingsMaster}" delim="," property="portBinding" if="${usingMasterBindings}">
         <copy todir="${redist.dir}" file="${portBinding}"/>
      </foreach>

      <if test="${includeVirtualDirectories}">
         <copy todir="${redist.dir}" file="${vdirListFile}"/>
      </if>         
      
      <copy todir="${redist.dir}" file="BizTalkDeploymentInclude.nant"/>
      <copy todir="${redist.dir}" file="CopyDeployResults.nant"/>
      <copy todir="${redist.dir}" file="${project::get-name()}.sln.deploy.build"/>

      <if test="${file::exists(project::get-name() + '.sln.deploy.include')}">
         <copy todir="${redist.dir}" file="${project::get-name()}.sln.deploy.include"/>
      </if>
      
      <copy todir="${redist.dir}">
         <fileset>
            <include name="*deploy*.bat" />
         </fileset>
      </copy>

      <mkdir dir="${redist.dir}\${deployTools}" />
      <copy todir="${redist.dir}\${deployTools}">
         <fileset basedir="${deployTools}">
            <include name="**\*.*" />
         </fileset>
      </copy>
     
      <!-- Grab all our assemblies of various flavors. -->
      <property name="deployAssemblies" value="${schemas}" />
      <call target="copyAssemblies" if="${includeSchemas}"/>
      
      <property name="deployAssemblies" value="${orchestrations}" />
      <call target="copyAssemblies" if="${includeOrchestrations}"/>

      <property name="deployAssemblies" value="${transforms}" />
      <call target="copyAssemblies" if="${includeTransforms}"/>

      <property name="deployAssemblies" value="${pipelines}" />
      <call target="copyAssemblies" if="${includePipelines}"/>

      <property name="deployAssemblies" value="${components}" />
      <call target="copyAssemblies" if="${includeComponents}"/>

      <property name="deployAssemblies" value="${pipelineComponents}" />
      <call target="copyAssemblies" if="${includePipelineComponents}"/>

      <property name="deployAssemblies" value="${customFunctoids}" />
      <call target="copyAssemblies" if="${includeCustomFunctoids}"/>

      <property name="deployAssemblies" value="${deploymentTest}" />
      <call target="copyAssemblies" if="${includeDeploymentTest}"/>
      <copy todir="${redist.dir}" file="${deploymentTest}.dll.config" if="${includeDeploymentTest}" failonerror="false"/>
      
      <copy todir="${redist.dir}" file="${project::get-name()}.log4net" if="${includelog4net}" />
            
      <call target="customRedist"/>
      
   </target>
   
   <target name="copyAssemblies">
      <foreach item="String" in="${deployAssemblies}" delim="," property="assembly">
         <property name="nameInput" value="${assembly}" />
         <call target="selectPath" />
         <echo message="${fullPath}"/>
         <copy todir="${redist.dir}" file="${fullPath}"/>

         <if test="${deployPDBsToGac}">
            <!-- Bring PDBs along for the ride if we are using them -->
            <getdirectoryname filespec="${fullPath}" property="dironly" />
            <copy todir="${redist.dir}" file="${dironly}\${assembly}.pdb" />
         </if>
         
      </foreach>
   </target>
   
   
   <!--
    Create the installer package
   -->
   <target name="installer" depends="redist" description="Create the installer package">
      <property name="wix.dir" value="${project::get-name()}.WiXSetup\WiX" />
      <exec program="cscript.exe">
         <arg value="//nologo" />
         <arg file="${project::get-name()}.WiXSetup\Setup\generate-install-script.js" />
         <arg file="${redist.dir}" />
         <arg file="${project::get-name()}.WiXSetup\Setup\Contents.wxi" />
      </exec>
      <exec program="${wix.dir}\candle.exe" verbose="true">
         <arg value="&quot;-dredist_folder=${redist.dir}&quot;" />
         <arg value="&quot;-dProductUpgradeCode=${ProductUpgradeCode}&quot;" />
         <arg value="&quot;-dProductName=${ProductName}&quot;" />
         <arg value="&quot;-dProductId=${ProductId}&quot;" />
         <arg value="&quot;-dProductVersion=${ProductVersion}&quot;" />
         <arg value="&quot;-dProjectVersion=${projectVersion}&quot;" />
         <arg value="&quot;-dManufacturer=${Manufacturer}&quot;" />
         <arg value="&quot;-dDefaultInstallDir=${DefaultInstallDir}&quot;" />
         <arg value="&quot;-dPackageDescription=${PackageDescription}&quot;" />
         <arg value="&quot;-dPackageComments=${PackageComments}&quot;" />
         <arg value="&quot;-dDeploymentTest=${deploymentTest}&quot;" />
         <arg value="-out" />
         <arg value="${project::get-name()}.WiXSetup\Setup\${project::get-name()}.wixobj" />
         <arg file="${project::get-name()}.WiXSetup\Setup\GenericBizTalkMSI.wxs" />
      </exec>
      <exec program="${wix.dir}\light.exe" verbose="true" commandline="${project::get-name()}.WiXSetup\Setup\${project::get-name()}.wixobj -out ${project::get-name()}.WiXSetup\Setup\Output\${project::get-name()}-${ProductVersion}.msi -ext &quot;${wix.dir}\WixUIExtension.dll&quot; -spdb" />
   </target>
</project>
